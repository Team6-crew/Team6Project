//Shadow (not sure if will be optimised)
//uniform sampler2DArrayShadow uShadowTex;
//SamplerState samp1 : register(s1);
//Texture2D_Array uShadowTex : register( t3 );
//
//
//
//ConstantBuffer uShadowSinglePixel
//{
//	float2 shadowSinglePixel;
//};
//
//ConstantBuffer uShadowTransform[SHADOWMAP_NUM]
//{
//column_major matrix shadowTransform;
//};
//
//const float NORMAL_BIAS = 0.003f;
//const float RAW_BIAS 	= 0.00025f;
// .....................End of shadow stuff...........................
SamplerState samp0 : register(s0);
Texture2D uDiffuseTex : register( t0 );

struct VS_OUTPUT
{
	float4 WorldPosition  : S_POSITION;
	float2 UV			: TEXCOORD0;
};

float4 main(VS_OUTPUT In) : S_TARGET_OUTPUT
{
	float4 texColour 	= uDiffuseTex.Sample(samp0, In.UV.xy);
	float4 OutFrag = texColour;
	return OutFrag;
}