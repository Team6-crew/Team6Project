#define SHADOWMAP_NUM  4

//Per object
ConstantBuffer RenderObjectData
{
	column_major matrix modelMatrix;
};

ConstantBuffer CameraData
{
	column_major matrix camMatrix;
};

SamplerState samp0 : register(s0);
Texture2D uDiffuseTex : register( t0 );


ConstantBuffer uColor
{
	float4 colour;
};

//Constant Per Frame
ConstantBuffer uAmbientColor
{
	float3 ambientColour;
};

ConstantBuffer uCameraPos
{
	float3 cameraPos;
};

ConstantBuffer uLightDirection
{
	float3 lightDirection;
};

ConstantBuffer uSpecularFactor
{
	float specularFactor;
};



//Shadow (not sure if will be optimised)
//uniform sampler2DArrayShadow uShadowTex;
//SamplerState samp1 : register(s1);
//Texture2D_Array uShadowTex : register( t3 );
//
//
//
//ConstantBuffer uShadowSinglePixel
//{
//	float2 shadowSinglePixel;
//};
//
//ConstantBuffer uShadowTransform[SHADOWMAP_NUM]
//{
//column_major matrix shadowTransform;
//};
//
//const float NORMAL_BIAS = 0.003f;
//const float RAW_BIAS 	= 0.00025f;
// .....................End of shadow stuff...........................
struct VS_OUTPUT
{
	float4 WorldPosition  : S_POSITION;
};

float4 main(VS_OUTPUT In) : S_TARGET_OUTPUT
{

	float4 OutFrag = float4(1.0, 1.0, 1.0, 1.0);
	return OutFrag;
}
